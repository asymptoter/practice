version: "3.7"
services:
    nginx:
        image: "nginx"
        depends_on:
            - "backend"
        ports:
            - "80:80"
        container_name: "nginx_practice"
        volumes:
            - type: bind
              source: ./nginx/config/nginx_local.conf
              target: /etc/nginx/conf.d/default.conf
              read_only: true
    backend:
        image: "server:latest"
        build: 
            context: .
            dockerfile: "Dockerfile"
        ports:
            - "8080"
        depends_on:
            - "redis"
            - "postgresql"
        environment:
            - PORT=80
        volumes:
            - "./app/server:/go/src/github.com/asymptoter/practice-backend/app/server"
            - "./config:/go/src/github.com/asymptoter/practice-backend/config"
        container_name: "backend_practice"
        restart: always
        #command: ["../../scripts/wait-for-it.sh", "postgresql:5432", "--", "go", "run", "main.go"]
    redis:
        image: "redis:latest"
        ports:
            - "6379:6379"
        container_name: "redis_practice" 
    postgresql:
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_USER: asymptoter
            POSTGRES_PASSWORD: password
        ports:
            - "5432:5432"
        volumes:
            - "./databases/postgres/data:/var/lib/postgresql/"
            - "./databases/postgres/init:/docker-entrypoint-initdb.d/"
        container_name: "postgresql_practice"
    mongodb:
        image: mongo:latest
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: asymptoter
            MONGO_INITDB_ROOT_PASSWORD: password
        ports:
            - "27017:27017"
        container_name: "mongodb_practice"
