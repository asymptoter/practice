// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import ctx "github.com/asymptoter/practice-backend/base/ctx"
import mock "github.com/stretchr/testify/mock"

import time "time"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Get provides a mock function with given fields: context, key, res
func (_m *Service) Get(context ctx.CTX, key string, res interface{}) error {
	ret := _m.Called(context, key, res)

	var r0 error
	if rf, ok := ret.Get(0).(func(ctx.CTX, string, interface{}) error); ok {
		r0 = rf(context, key, res)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: context, key, value, expiration
func (_m *Service) Set(context ctx.CTX, key string, value interface{}, expiration time.Duration) error {
	ret := _m.Called(context, key, value, expiration)

	var r0 error
	if rf, ok := ret.Get(0).(func(ctx.CTX, string, interface{}, time.Duration) error); ok {
		r0 = rf(context, key, value, expiration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
